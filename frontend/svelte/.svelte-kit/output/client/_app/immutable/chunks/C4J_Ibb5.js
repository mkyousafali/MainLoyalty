import{w as d}from"./CmJYm0S5.js";import{b as m}from"./Bt-Xh7oU.js";import{s}from"./CIOq__Tp.js";const r={en:{title:"Terms and Conditions",subtitle:"Urban Market Loyalty Program",sections:{section1:{title:"1. Account Usage",content:"Your loyalty account is personal and non-transferable. Only the registered customer can use the account."},section2:{title:"2. Points Earning",content:"Earn 1 point for every 1 ﷼ spent at Urban Market stores. Points are awarded after successful payment."},section3:{title:"3. Points Redemption",content:"Points can be redeemed in fixed amounts only: 50, 100, 150, or 200 points. Custom redemption amounts are not allowed."},section4:{title:"4. Point Validity",content:"Points expire after 12 months of account inactivity. Active usage resets the expiration timer."},section5:{title:"5. Card Types",content:"Silver (0-999 points), Gold (1000-4999 points), Platinum (5000+ points). Card benefits increase with tier level."},section6:{title:"6. Privacy Policy",content:"We protect your personal information according to Saudi data protection laws and regulations."},section7:{title:"7. Program Changes",content:"Urban Market reserves the right to modify these terms and conditions with 30 days advance notice."},section8:{title:"8. Fraud Prevention",content:"Any fraudulent activity, misuse, or violation of terms will result in immediate account termination."},section9:{title:"9. Store Usage",content:"Points can only be used for discounts on future purchases at participating Urban Market stores."},section10:{title:"10. Support",content:"For assistance, contact customer support via WhatsApp or visit any Urban Market branch."}}},ar:{title:"الشروط والأحكام",subtitle:"برنامج ولاء ايربين ماركت",sections:{section1:{title:"1. استخدام الحساب",content:"حساب الولاء الخاص بك شخصي وغير قابل للنقل. يمكن للعميل المسجل فقط استخدام الحساب."},section2:{title:"2. كسب النقاط",content:"احصل على نقطة واحدة مقابل كل ريال سعودي تنفقه في متاجر ايربن ماركت. يتم منح النقاط بعد الدفع بنجاح."},section3:{title:"3. استبدال النقاط",content:"يمكن استبدال النقاط بمبالغ ثابتة فقط: 50، 100، 150، أو 200 نقطة. لا يُسمح بمبالغ الاستبدال المخصصة."},section4:{title:"4. صلاحية النقاط",content:"تنتهي صلاحية النقاط بعد 12 شهرًا من عدم النشاط في الحساب. الاستخدام النشط يعيد تعيين مؤقت انتهاء الصلاحية."},section5:{title:"5. أنواع البطاقات",content:"فضية (0-999 نقطة)، ذهبية (1000-4999 نقطة)، بلاتينية (5000+ نقطة). تزيد مزايا البطاقة مع مستوى المستوى."},section6:{title:"6. سياسة الخصوصية",content:"نحمي معلوماتك الشخصية وفقًا لقوانين حماية البيانات السعودية واللوائح."},section7:{title:"7. تغييرات البرنامج",content:"يحتفظ ايربن ماركت بالحق في تعديل هذه الشروط والأحكام مع إشعار مسبق لمدة 30 يومًا."},section8:{title:"8. منع الاحتيال",content:"أي نشاط احتيالي أو سوء استخدام أو انتهاك للشروط سيؤدي إلى إنهاء الحساب فورًا."},section9:{title:"9. استخدام المتجر",content:"يمكن استخدام النقاط فقط للحصول على خصومات على المشتريات المستقبلية في متاجر ايربن ماركت المشاركة."},section10:{title:"10. الدعم",content:"للمساعدة، اتصل بدعم العملاء عبر واتساب أو قم بزيارة أي فرع من فروع ايربن ماركت."}}}};function u(){const{subscribe:a,set:e,update:c}=d(r);return{subscribe:a,loadTerms:async()=>{try{console.log("🔄 Loading terms from database...");const{data:t,error:o}=await s.from("terms_conditions").select("*").eq("is_active",!0).order("created_at",{ascending:!1}).limit(1).single();if(o){console.warn("⚠️ No active terms found in database, using defaults:",o.message),e(r);return}if(t&&t.content_en&&t.content_ar){console.log("✅ Terms loaded from database");const n={en:JSON.parse(t.content_en),ar:JSON.parse(t.content_ar)};e(n)}else console.warn("⚠️ Invalid terms data structure, using defaults"),e(r)}catch(t){console.error("❌ Failed to load terms from database:",t);try{const o=localStorage.getItem("savedTermsAndConditions");if(o){const n=JSON.parse(o);if(n.content){e(n.content);return}}}catch(o){console.warn("Failed to load terms from localStorage:",o)}e(r)}},saveTerms:async t=>{try{console.log("💾 Saving terms to database...");const{error:o}=await s.from("terms_conditions").update({is_active:!1}).eq("is_active",!0);o&&console.warn("⚠️ Failed to deactivate existing terms:",o.message);const{data:n,error:l}=await s.from("terms_conditions").insert({version:`v${new Date().toISOString().slice(0,19).replace(/[-:]/g,"").replace("T","_")}`,content_en:JSON.stringify(t.en),content_ar:JSON.stringify(t.ar),effective_date:new Date().toISOString().split("T")[0],is_active:!0}).select().single();if(l)throw new Error(`Database save failed: ${l.message}`);if(console.log("✅ Terms saved to database successfully"),e(t),m)try{const i={content:t,lastUpdated:new Date().toISOString(),updatedBy:"Admin User",databaseSaved:!0};localStorage.setItem("savedTermsAndConditions",JSON.stringify(i))}catch(i){console.warn("Failed to save backup to localStorage:",i)}return!0}catch(o){console.error("❌ Failed to save terms to database:",o);try{const n={content:t,lastUpdated:new Date().toISOString(),updatedBy:"Admin User",databaseSaved:!1};return localStorage.setItem("savedTermsAndConditions",JSON.stringify(n)),e(t),console.log("⚠️ Terms saved to localStorage as fallback"),!0}catch(n){return console.error("Failed to save terms to localStorage fallback:",n),!1}return!1}},getTermsForLanguage:(t,o)=>o[t]||r[t],updateTerms:t=>{e(t)},resetToDefault:()=>{e(r),localStorage.removeItem("savedTermsAndConditions")}}}const v=u();function y(a,e=10){return Object.values(a.sections).slice(0,e).map(t=>({title:t.title,content:t.content}))}async function S(){try{const{data:a,error:e}=await s.from("terms_conditions").select("created_at").eq("is_active",!0).order("created_at",{ascending:!1}).limit(1).single();return e||!a?(console.warn("No active terms found for last updated check"),null):a.created_at}catch(a){console.warn("Failed to get terms last updated from database:",a);try{const e=localStorage.getItem("savedTermsAndConditions");if(e)return JSON.parse(e).lastUpdated||null}catch(e){console.warn("Failed to get terms last updated from localStorage:",e)}return null}}export{y as f,S as g,v as t};
