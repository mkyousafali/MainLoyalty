import"../chunks/DsnmJJEf.js";import"../chunks/69_IOA4Y.js";import{o as Nt}from"../chunks/Y1pQyyvi.js";import{l as $t,q as Ut,r as Dt,m as C,n as f,o as Lt,a as e,y as A,w as i,v as s,s as o,z as r,C as Ee,E as Ne,t as S,A as $e,B as w,u as c,x as q,G,H as Pe}from"../chunks/Ck91ypkQ.js";import{i as E}from"../chunks/RujGBxXx.js";import{e as W,i as X}from"../chunks/D775oJua.js";import{r as Y,s as He,a as jt}from"../chunks/DvH4tfbe.js";import{s as Ve}from"../chunks/B38bOHRo.js";import{s as qt}from"../chunks/CNyBBxAM.js";import{a as Je}from"../chunks/C4HntxLm.js";import{b as Ue}from"../chunks/xkiwYR4x.js";import{i as zt}from"../chunks/6tn_K0LM.js";import{s as L}from"../chunks/CIOq__Tp.js";var Ft=C('<div class="text-center py-12"><div class="text-4xl mb-4">⏳</div> <p class="text-gray-600 text-lg">Loading data...</p></div>'),Bt=C("<option> </option>"),It=C("<option> </option>"),Mt=C('<button class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600" aria-label="Clear search">✕</button>'),Ot=C('<div class="text-sm bg-purple-100 text-purple-700 px-3 py-1 rounded-full font-medium"> </div>'),Gt=C('<tr><td class="p-4"><input type="checkbox" class="rounded focus:ring-2 focus:ring-purple-500"/></td><td class="p-4 font-medium text-gray-900"> </td><td class="p-4 font-mono text-gray-600"> </td><td class="p-4"><span class="px-3 py-1 rounded-full text-sm font-semibold text-white flex items-center gap-1 inline-flex"><!> </span></td><td class="p-4 text-gray-600"> </td></tr>'),Pt=C('<div class="p-8 text-center text-gray-500"><div class="text-4xl mb-2">🔍</div> <p class="text-lg font-medium">No customers found</p> <p class="text-sm">Try adjusting your search criteria</p></div>'),Ht=C("<option> </option>"),Vt=C('<div><div class="flex items-center gap-2"><span class="text-lg"><!></span> <p class="font-medium"> </p></div> <button class="text-gray-500 hover:text-gray-700 p-1" aria-label="Close message">✕</button></div>'),Jt=C('<div class="bg-white p-6 rounded-xl shadow-md border border-gray-100"><h2 class="text-xl font-bold mb-4 text-blue-700 flex items-center gap-2">🧍 Single Customer Assignment</h2> <div class="grid grid-cols-1 md:grid-cols-3 gap-4 items-end"><div class="space-y-2"><label for="cardNumber" class="block text-sm font-medium text-gray-700">Card Number</label> <div class="relative"><input id="cardNumber" placeholder="Enter full card number" class="input w-full pl-10 svelte-15ui3mo" aria-label="Customer card number"/> <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"><span class="text-gray-400">💳</span></div></div></div> <div class="space-y-2"><label for="cardType" class="block text-sm font-medium text-gray-700">Card Type</label> <select id="cardType" class="select w-full svelte-15ui3mo" aria-label="Select card type"><option>Choose card type...</option><!></select></div> <button class="btn bg-green-600 hover:bg-green-700 flex items-center justify-center gap-2 svelte-15ui3mo" aria-label="Assign card type to single customer">✅ Assign</button></div></div> <div class="bg-gray-50 p-6 rounded-xl shadow-md border border-gray-100"><h2 class="text-xl font-bold mb-4 text-blue-700 flex items-center gap-2">👥 Bulk Assignment to All Customers</h2> <div class="grid grid-cols-1 md:grid-cols-2 gap-4 items-end"><div class="space-y-2"><label for="bulkCardType" class="block text-sm font-medium text-gray-700">Card Type for All Customers</label> <select id="bulkCardType" class="select w-full svelte-15ui3mo" aria-label="Select card type for all customers"><option>Choose card type...</option><!></select></div> <button class="btn bg-blue-600 hover:bg-blue-700 flex items-center justify-center gap-2 svelte-15ui3mo" aria-label="Assign card type to all customers">🚀 Assign to All</button></div></div> <div class="bg-white p-6 rounded-xl shadow-md border border-gray-100"><h2 class="text-xl font-bold mb-4 text-purple-700 flex items-center gap-2">📋 Table-based Customer Selection</h2> <div class="mb-6 flex gap-3"><div class="relative flex-1"><input placeholder="Search by name, card number, or card type..." class="input w-full pl-10 pr-10 svelte-15ui3mo" aria-label="Search customers"/> <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"><span class="text-gray-400">🔍</span></div> <!></div></div> <div class="mb-4 flex justify-between items-center"><div class="text-sm text-gray-600">Showing <span class="font-medium"> </span> of <span class="font-medium"> </span> customers</div> <!></div> <div class="overflow-x-auto border rounded-lg"><table class="w-full table-auto"><thead class="bg-gray-100"><tr><th class="p-4 text-left"><input type="checkbox" class="rounded focus:ring-2 focus:ring-purple-500" aria-label="Select all customers"/></th><th class="p-4 text-left font-semibold text-gray-700">👤 Name</th><th class="p-4 text-left font-semibold text-gray-700">💳 Card Number</th><th class="p-4 text-left font-semibold text-gray-700">🏷️ Card Type</th><th class="p-4 text-left font-semibold text-gray-700">📅 Expiry Date</th></tr></thead><tbody></tbody></table> <!></div> <div class="mt-6 p-4 bg-gray-50 rounded-lg border border-gray-200"><h3 class="text-sm font-medium text-gray-700 mb-3">Assign Card Type to Selected Customers</h3> <div class="flex flex-wrap gap-3 items-end"><div class="flex-1 min-w-[200px] space-y-2"><label for="bulkSelectCardType" class="block text-sm font-medium text-gray-700">Card Type</label> <select id="bulkSelectCardType" class="select w-full svelte-15ui3mo" aria-label="Select card type for selected customers"><option>Choose card type...</option><!></select></div> <button class="btn bg-purple-600 hover:bg-purple-700 flex items-center justify-center gap-2 svelte-15ui3mo" aria-label="Assign card type to selected customers"> </button></div></div></div> <!>',1),Kt=C('<div class="p-6 space-y-6 max-w-7xl mx-auto"><h1 class="text-3xl font-bold text-gray-800 flex items-center gap-2">📌 Card Type Assignment Management</h1> <!></div>');function ia(Ke,Qe){$t(Qe,!1);const k=A();let T=A([]),_=A([]),u=A(""),d=A(new Set),N=A(""),n=A(""),$=A(""),Z=A(!1),ee=null;Nt(async()=>{await Re()});function J(t,m=!0){o(n,t),ee&&clearTimeout(ee),m&&t.includes("✅")&&(ee=setTimeout(()=>{o(n,"")},5e3))}async function Re(){o(Z,!0),await We(),await K(),o(Z,!1)}async function We(){try{const{data:t,error:m}=await L.from("card_types").select("id, name, color, is_active").eq("is_active",!0).order("name");if(m){console.error("Error loading card types:",m),o(n,`❌ Failed to load card types: ${m.message}`),o(_,[]);return}o(_,t||[]),console.log("✅ Card types loaded:",e(_)),console.log("🔍 First card type ID type:",typeof e(_)[0]?.id,"Value:",e(_)[0]?.id)}catch(t){console.error("Error loading card types:",t),o(n,`❌ Error loading card types: ${t?.message||"Unknown error"}`),o(_,[])}}async function K(){try{const{data:t,error:m}=await L.from("customers").select("count",{count:"exact",head:!0});if(m){console.error("❌ Database connection test failed:",m),o(n,`❌ Database connection failed: ${m.message}`);return}const{data:p,error:y}=await L.from("customers").select(`
          id, card_number, customer_code, full_name, mobile, phone, email, address, place, 
          nearest_branch_id, card_type_id, total_points, points_earned_total, points_redeemed_total, 
          is_active, valid_until, registration_date, created_at, updated_at,
          card_types (id, name, color)
        `).order("full_name").limit(500);if(y){console.error("Error loading customers:",y),o(n,`❌ Failed to load customers: ${y.message}`),o(T,[]);return}if(!p||p.length===0){o(n,"⚠️ No customers found in database"),o(T,[]);return}o(T,p.map(g=>({...g,name:g.full_name||"Unknown Customer",first_name:g.full_name?.split(" ")[0]||"",last_name:g.full_name?.split(" ").slice(1).join(" ")||"",expiry_date:g.valid_until||g.created_at}))),J(`✅ Loaded ${e(T).length} customers successfully`)}catch(t){console.error("💥 Exception loading customers:",t),o(n,`❌ Error loading customers: ${t?.message||"Unknown error"}`),o(T,[])}}function Xe(){o(N,"")}function Ye(t){e(d).has(t)?e(d).delete(t):e(d).add(t),o(d,new Set(e(d)))}function Ze(){const t=e(k);t.every(p=>e(d).has(p.id))?t.forEach(p=>e(d).delete(p.id)):t.forEach(p=>e(d).add(p.id)),o(d,new Set(e(d)))}async function et(){if(!e($)||!e(u)){o(n,"❌ Please enter card number and select card type");return}try{const{data:t,error:m}=await L.from("customers").select("id, full_name, card_number").eq("card_number",e($)).eq("is_active",!0).single();if(m||!t){o(n,`❌ Customer with card number "${e($)}" not found. Check the card number and try again.`),console.error("Customer not found:",m);return}console.log("🔍 DEBUG ASSIGNMENT:"),console.log("  selectedCardType type:",typeof e(u),"value:",e(u)),console.log("  existingCustomer.id type:",typeof t.id,"value:",t.id),console.log("  Available card types:",e(_).map(j=>({id:j.id,type:typeof j.id})));const{data:p,error:y}=await L.from("customers").update({card_type_id:e(u),updated_at:new Date().toISOString()}).eq("id",t.id).select();if(y){console.error("Update error:",y),o(n,`❌ Failed to assign card type: ${y.message}`);return}const g=t.full_name||"Unknown Customer",U=e(_).find(j=>j.id==e(u))?.name||"Unknown";J(`✅ Assigned ${U} to ${g} (${e($)})`),await K(),o($,""),o(u,"")}catch(t){console.error("Error assigning card type:",t),o(n,`❌ Error: ${t?.message||"Unknown error"}`)}}async function tt(){if(!e(u)){o(n,"❌ Please select a card type");return}try{const{count:t}=await L.from("customers").select("*",{count:"exact",head:!0}).eq("is_active",!0);if(!t||t===0){o(n,"❌ No active customers found");return}const{data:m,error:p}=await L.from("customers").update({card_type_id:e(u),updated_at:new Date().toISOString()}).eq("is_active",!0).select("id");if(p){console.error("Update error:",p),o(n,`❌ Failed to assign card type: ${p.message}`);return}const y=e(_).find(U=>U.id==e(u))?.name||"Unknown",g=m?.length||0;J(`✅ Assigned ${y} to ${g} customers successfully`),await K(),o(u,"")}catch(t){console.error("Error assigning card type to all:",t),o(n,`❌ Error: ${t?.message||"Unknown error"}`)}}async function at(){if(!e(u)||e(d).size===0){o(n,"❌ Please select card type and customers");return}try{const t=Array.from(e(d)),{data:m,error:p}=await L.from("customers").update({card_type_id:e(u),updated_at:new Date().toISOString()}).in("id",t).select("id, full_name");if(p){console.error("Bulk update error:",p),o(n,`❌ Failed to assign card type: ${p.message}`);return}const y=e(_).find(U=>U.id==e(u))?.name||"Unknown",g=m?.length||0;J(`✅ Successfully assigned ${y} to ${g} customer(s)`),o(d,new Set),await K(),o(u,"")}catch(t){console.error("Error in bulk assignment:",t),o(n,`❌ Error: ${t?.message||"Unknown error"}`)}}function rt(t){return t?new Date(t).toLocaleDateString():"N/A"}function P(t){return t&&e(_).find(m=>m.id==t)?.name||"Unassigned"}function st(t){return t&&e(_).find(m=>m.id==t)?.color||"#6b7280"}Ut(()=>(e(T),e(N)),()=>{o(k,e(T).filter(t=>t.name.toLowerCase().includes(e(N).toLowerCase())||t.card_number.includes(e(N))||P(t.card_type_id).toLowerCase().includes(e(N).toLowerCase())))}),Dt(),zt();var te=Kt(),ot=i(s(te),2);{var lt=t=>{var m=Ft();f(t,m)},it=t=>{var m=Jt(),p=Ee(m),y=i(s(p),2),g=s(y),U=i(s(g),2),j=s(U);Y(j),Ne(2),r(U),r(g);var ae=i(g,2),re=i(s(ae),2);S(()=>{e(u),$e(()=>{e(_)})});var se=s(re);se.value=se.__value="";var nt=i(se);W(nt,1,()=>e(_),X,(l,a)=>{var v=Bt(),x=s(v,!0);r(v);var b={};S(()=>{w(x,(e(a),c(()=>e(a).name))),b!==(b=(e(a),c(()=>e(a).id)))&&(v.value=(v.__value=(e(a),c(()=>e(a).id)))??"")}),f(l,v)}),r(re),r(ae);var De=i(ae,2);r(y),r(p);var oe=i(p,2),Le=i(s(oe),2),le=s(Le),ie=i(s(le),2);S(()=>{e(u),$e(()=>{e(_)})});var ne=s(ie);ne.value=ne.__value="";var dt=i(ne);W(dt,1,()=>e(_),X,(l,a)=>{var v=It(),x=s(v,!0);r(v);var b={};S(()=>{w(x,(e(a),c(()=>e(a).name))),b!==(b=(e(a),c(()=>e(a).id)))&&(v.value=(v.__value=(e(a),c(()=>e(a).id)))??"")}),f(l,v)}),r(ie),r(le);var je=i(le,2);r(Le),r(oe);var de=i(oe,2),ce=i(s(de),2),qe=s(ce),ue=s(qe);Y(ue);var ct=i(ue,4);{var ut=l=>{var a=Mt();q("click",a,Xe),f(l,a)};E(ct,l=>{e(N)&&l(ut)})}r(qe),r(ce);var ve=i(ce,2),me=s(ve),pe=i(s(me)),vt=s(pe,!0);r(pe);var ze=i(pe,2),mt=s(ze,!0);r(ze),Ne(),r(me);var pt=i(me,2);{var ft=l=>{var a=Ot(),v=s(a);r(a),S(()=>w(v,`${e(d),c(()=>e(d).size)??""} customer${e(d),c(()=>e(d).size!==1?"s":"")??""} selected`)),f(l,a)};E(pt,l=>{e(d),c(()=>e(d).size>0)&&l(ft)})}r(ve);var fe=i(ve,2),_e=s(fe),ge=s(_e),Fe=s(ge),Be=s(Fe),be=s(Be);Y(be),r(Be),Ne(4),r(Fe),r(ge);var Ie=i(ge);W(Ie,5,()=>e(k),X,(l,a)=>{var v=Gt();let x;var b=s(v),z=s(b);Y(z),r(b);var H=i(b),we=s(H,!0);r(H);var F=i(H),Ce=s(F,!0);r(F);var V=i(F),h=s(V),B=s(h);{var wt=D=>{var I=G("👑");f(D,I)},Ct=D=>{var I=Pe(),ke=Ee(I);{var Se=M=>{var R=G("⭐");f(M,R)},Te=M=>{var R=Pe(),Tt=Ee(R);{var At=O=>{var Ae=G("🥈");f(O,Ae)},Et=O=>{var Ae=G("🏷️");f(O,Ae)};E(Tt,O=>{e(a),c(()=>P(e(a).card_type_id).toLowerCase().includes("silver"))?O(At):O(Et,!1)},!0)}f(M,R)};E(ke,M=>{e(a),c(()=>P(e(a).card_type_id).toLowerCase().includes("gold"))?M(Se):M(Te,!1)},!0)}f(D,I)};E(B,D=>{e(a),c(()=>P(e(a).card_type_id).toLowerCase().includes("premium"))?D(wt):D(Ct,!1)})}var kt=i(B);r(h),r(V);var Ge=i(V),St=s(Ge,!0);r(Ge),r(v),S((D,I,ke,Se,Te)=>{x=Ve(v,1,"border-t hover:bg-gray-100 transition-colors duration-150",null,x,D),He(z,I),jt(z,"aria-label",`Select customer ${e(a),c(()=>e(a).name)??""}`),w(we,(e(a),c(()=>e(a).name))),w(Ce,(e(a),c(()=>e(a).card_number))),qt(h,`background-color: ${ke??""}`),w(kt,` ${Se??""}`),w(St,Te)},[()=>({"bg-purple-50":e(d).has(e(a).id),"border-purple-200":e(d).has(e(a).id)}),()=>(e(d),e(a),c(()=>e(d).has(e(a).id))),()=>(e(a),c(()=>st(e(a).card_type_id))),()=>(e(a),c(()=>P(e(a).card_type_id))),()=>(e(a),c(()=>rt(e(a).expiry_date)))]),q("change",z,()=>Ye(e(a).id)),f(l,v)}),r(Ie),r(_e);var _t=i(_e,2);{var gt=l=>{var a=Pt();f(l,a)};E(_t,l=>{e(k),c(()=>e(k).length===0)&&l(gt)})}r(fe);var Me=i(fe,2),Oe=i(s(Me),2),ye=s(Oe),xe=i(s(ye),2);S(()=>{e(u),$e(()=>{e(_)})});var he=s(xe);he.value=he.__value="";var bt=i(he);W(bt,1,()=>e(_),X,(l,a)=>{var v=Ht(),x=s(v,!0);r(v);var b={};S(()=>{w(x,(e(a),c(()=>e(a).name))),b!==(b=(e(a),c(()=>e(a).id)))&&(v.value=(v.__value=(e(a),c(()=>e(a).id)))??"")}),f(l,v)}),r(xe),r(ye);var Q=i(ye,2),yt=s(Q);r(Q),r(Oe),r(Me),r(de);var xt=i(de,2);{var ht=l=>{var a=Vt();let v;var x=s(a),b=s(x),z=s(b);{var H=h=>{var B=G("✔️");f(h,B)},we=h=>{var B=G("❌");f(h,B)};E(z,h=>{e(n),c(()=>e(n).includes("✅"))?h(H):h(we,!1)})}r(b);var F=i(b,2),Ce=s(F,!0);r(F),r(x);var V=i(x,2);r(a),S(h=>{v=Ve(a,1,"p-4 rounded-xl shadow-md flex items-center justify-between",null,v,h),w(Ce,e(n))},[()=>({"bg-green-100":e(n).includes("✅"),"text-green-700":e(n).includes("✅"),"border-green-200":e(n).includes("✅"),"bg-red-100":!e(n).includes("✅"),"text-red-700":!e(n).includes("✅"),"border-red-200":!e(n).includes("✅"),border:!0})]),q("click",V,()=>o(n,"")),f(l,a)};E(xt,l=>{e(n)&&l(ht)})}S(l=>{De.disabled=!e($)||!e(u),je.disabled=!e(u),w(vt,(e(k),c(()=>e(k).length))),w(mt,(e(T),c(()=>e(T).length))),He(be,l),Q.disabled=(e(d),e(u),c(()=>e(d).size===0||!e(u))),w(yt,`📋 Assign to Selected (${e(d),c(()=>e(d).size)??""})`)},[()=>(e(k),e(d),c(()=>e(k).length>0&&e(k).every(l=>e(d).has(l.id))))]),Je(j,()=>e($),l=>o($,l)),Ue(re,()=>e(u),l=>o(u,l)),q("click",De,et),Ue(ie,()=>e(u),l=>o(u,l)),q("click",je,tt),Je(ue,()=>e(N),l=>o(N,l)),q("change",be,Ze),Ue(xe,()=>e(u),l=>o(u,l)),q("click",Q,at),f(t,m)};E(ot,t=>{e(Z)?t(lt):t(it,!1)})}r(te),f(Ke,te),Lt()}export{ia as component};
